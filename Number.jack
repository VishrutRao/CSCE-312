class Number {
	field int num;
	
	constructor Number new() {
		let num = 0;
		return this;
	}
	
	method void setNum(int n) {
		let num = n;
		return;
	}
	
	method void draw(int x, int y) {
		var int memAddress;
		let memAddress = 16384+(32*(y + 5)) + ((x + 10)/16);
		do Screen.setColor(true);
		if (num = 0) {
			do Memory.poke(memAddress+0, 62);
			do Memory.poke(memAddress+32, 127);
			do Memory.poke(memAddress+64, 65);
			do Memory.poke(memAddress+96, 65);
			do Memory.poke(memAddress+128, 65);
			do Memory.poke(memAddress+160, 65);
			do Memory.poke(memAddress+192, 65);
			do Memory.poke(memAddress+224, 65);
			do Memory.poke(memAddress+256, 127);
			do Memory.poke(memAddress+288, 62);
			do Memory.poke(memAddress+320, 0);
			do Memory.poke(memAddress+352, 0);
			do Memory.poke(memAddress+384, 0);
			do Memory.poke(memAddress+416, 0);
			do Memory.poke(memAddress+448, 0);
			do Memory.poke(memAddress+480, 0);
		}
		if (num = 1) {
			do Memory.poke(memAddress+0, 15);
			do Memory.poke(memAddress+32, 15);
			do Memory.poke(memAddress+64, 12);
			do Memory.poke(memAddress+96, 12);
			do Memory.poke(memAddress+128, 12);
			do Memory.poke(memAddress+160, 12);
			do Memory.poke(memAddress+192, 63);
			do Memory.poke(memAddress+224, 63);
			do Memory.poke(memAddress+256, 0);
			do Memory.poke(memAddress+288, 0);
			do Memory.poke(memAddress+320, 0);
			do Memory.poke(memAddress+352, 0);
			do Memory.poke(memAddress+384, 0);
			do Memory.poke(memAddress+416, 0);
			do Memory.poke(memAddress+448, 0);
			do Memory.poke(memAddress+480, 0);
		}
		if (num = 2) {
			do Memory.poke(memAddress+0, 30);
			do Memory.poke(memAddress+32, 63);
			do Memory.poke(memAddress+64, 97);
			do Memory.poke(memAddress+96, 96);
			do Memory.poke(memAddress+128, 96);
			do Memory.poke(memAddress+160, 48);
			do Memory.poke(memAddress+192, 28);
			do Memory.poke(memAddress+224, 6);
			do Memory.poke(memAddress+256, 127);
			do Memory.poke(memAddress+288, 127);
			do Memory.poke(memAddress+320, 0);
			do Memory.poke(memAddress+352, 0);
			do Memory.poke(memAddress+384, 0);
			do Memory.poke(memAddress+416, 0);
			do Memory.poke(memAddress+448, 0);
			do Memory.poke(memAddress+480, 0);
		}
		if (num = 3) {
			do Memory.poke(memAddress+0, 63);
			do Memory.poke(memAddress+32, 63);
			do Memory.poke(memAddress+64, 48);
			do Memory.poke(memAddress+96, 63);
			do Memory.poke(memAddress+128, 63);
			do Memory.poke(memAddress+160, 48);
			do Memory.poke(memAddress+192, 63);
			do Memory.poke(memAddress+224, 63);
			do Memory.poke(memAddress+256, 0);
			do Memory.poke(memAddress+288, 0);
			do Memory.poke(memAddress+320, 0);
			do Memory.poke(memAddress+352, 0);
			do Memory.poke(memAddress+384, 0);
			do Memory.poke(memAddress+416, 0);
			do Memory.poke(memAddress+448, 0);
			do Memory.poke(memAddress+480, 0);
		}
		if (num = 4) {
			do Memory.poke(memAddress+0, 51);
			do Memory.poke(memAddress+32, 51);
			do Memory.poke(memAddress+64, 51);
			do Memory.poke(memAddress+96, 63);
			do Memory.poke(memAddress+128, 63);
			do Memory.poke(memAddress+160, 48);
			do Memory.poke(memAddress+192, 48);
			do Memory.poke(memAddress+224, 48);
			do Memory.poke(memAddress+256, 48);
			do Memory.poke(memAddress+288, 0);
			do Memory.poke(memAddress+320, 0);
			do Memory.poke(memAddress+352, 0);
			do Memory.poke(memAddress+384, 0);
			do Memory.poke(memAddress+416, 0);
			do Memory.poke(memAddress+448, 0);
			do Memory.poke(memAddress+480, 0);
		}
		if (num = 5) {
			do Memory.poke(memAddress+0, 127);
			do Memory.poke(memAddress+32, 127);
			do Memory.poke(memAddress+64, 3);
			do Memory.poke(memAddress+96, 3);
			do Memory.poke(memAddress+128, 31);
			do Memory.poke(memAddress+160, 63);
			do Memory.poke(memAddress+192, 96);
			do Memory.poke(memAddress+224, 96);
			do Memory.poke(memAddress+256, 63);
			do Memory.poke(memAddress+288, 31);
			do Memory.poke(memAddress+320, 0);
			do Memory.poke(memAddress+352, 0);
			do Memory.poke(memAddress+384, 0);
			do Memory.poke(memAddress+416, 0);
			do Memory.poke(memAddress+448, 0);
			do Memory.poke(memAddress+480, 0);
		}
		if (num = 6) {
			do Memory.poke(memAddress+0, 12);
			do Memory.poke(memAddress+32, 14);
			do Memory.poke(memAddress+64, 3);
			do Memory.poke(memAddress+96, 3);
			do Memory.poke(memAddress+128, 63);
			do Memory.poke(memAddress+160, 51);
			do Memory.poke(memAddress+192, 51);
			do Memory.poke(memAddress+224, 63);
			do Memory.poke(memAddress+256, 0);
			do Memory.poke(memAddress+288, 0);
			do Memory.poke(memAddress+320, 0);
			do Memory.poke(memAddress+352, 0);
			do Memory.poke(memAddress+384, 0);
			do Memory.poke(memAddress+416, 0);
			do Memory.poke(memAddress+448, 0);
			do Memory.poke(memAddress+480, 0);
		}
		if (num = 7) {
			do Memory.poke(memAddress+0, 255);
			do Memory.poke(memAddress+32, 255);
			do Memory.poke(memAddress+64, 192);
			do Memory.poke(memAddress+96, 96);
			do Memory.poke(memAddress+128, 48);
			do Memory.poke(memAddress+160, 24);
			do Memory.poke(memAddress+192, 12);
			do Memory.poke(memAddress+224, 6);
			do Memory.poke(memAddress+256, 3);
			do Memory.poke(memAddress+288, 0);
			do Memory.poke(memAddress+320, 0);
			do Memory.poke(memAddress+352, 0);
			do Memory.poke(memAddress+384, 0);
			do Memory.poke(memAddress+416, 0);
			do Memory.poke(memAddress+448, 0);
			do Memory.poke(memAddress+480, 0);
		}
		if (num = 8) {
			do Memory.poke(memAddress+0, 62);
			do Memory.poke(memAddress+32, 127);
			do Memory.poke(memAddress+64, 65);
			do Memory.poke(memAddress+96, 65);
			do Memory.poke(memAddress+128, 62);
			do Memory.poke(memAddress+160, 62);
			do Memory.poke(memAddress+192, 65);
			do Memory.poke(memAddress+224, 65);
			do Memory.poke(memAddress+256, 127);
			do Memory.poke(memAddress+288, 62);
			do Memory.poke(memAddress+320, 0);
			do Memory.poke(memAddress+352, 0);
			do Memory.poke(memAddress+384, 0);
			do Memory.poke(memAddress+416, 0);
			do Memory.poke(memAddress+448, 0);
			do Memory.poke(memAddress+480, 0);
		}
		return;
	}
}